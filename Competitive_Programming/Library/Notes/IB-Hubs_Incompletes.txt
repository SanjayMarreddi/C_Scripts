PROBLEM SOLVING PARADIGMS :

- Bit Manipulations:  

(Need depth understanding of Masking & ways to use shifts)
--> Practise Q : Last 3 Questions Understand again!!
--> Exam-1 : Q-1

------------------------------------------------------

- Complete Search :

--> Implement all possible arrangements of N- QUEENS in a EFFICIENT way using Bitmasks.

--> Coding Practise - 1st and Last Question
--> Exam : 1st & Last Q.

 ----------------------------------------------------

- Greedy Algorithms :

--> Learn how shares work. 
Practise Q/A : 

Business out of Shares, Maximize Lectures (IMP)
, Maximize Lectures (IMP)

------------------------------------------------------

- DP :

Understand & Solve again perfectly.

--> [ Coding Practise - 1 ] 
 Q-1 - Coin Change
 Q-5 - Rods

--> [ Coding Practise - 2 ] 
All Problems Solving once again & Revision 


 ----------------------------------------------------
Elementary Data Structures and Algorithms  Course in IB-HUBS :

(Revision & Complete all types of Practise, Assesments & Exams of Elem DSA Left off Topics (LL, Stacks, Queues) )

 ----------------------------------------------------

         Data Structures Course in IB-HUBS : 


0. Stacks :  
``` Sort Stack Recursively
Given a stack, sort it in non-increasing order using recursion.
```

1. Check about Normal Implementation of Heaps without STL (Solve Practise Section without STL in `Priority Queues & Heaps` Section. 
)


2.  Heap Sort Last Coding Exam Car Question Improvement after Learning about :- `priority_queue<int, vector<int>,CustomFunction>`

3.  Deque & Circular Queue : - 

Coding Exam 1st Q
Proper Understanding !! (Minimize the maximum difference between adjacent elements in an array) AND Coding Practise Last Question Code again without referring !


4. HashTables: -

First& Second & Second Coding Exam 1,*2* Questions Understand the Implementation in more detail !

Last Exam Last Question Debug the Duplicate possible Test Cases like :
1
6 3
2 3 4 2 3 4

Last Exam 2nd Question from GFG


5. Counting Sort :- Exam : 2nd Question Last Test Case : Debug TLE


6. Binary Tree Traversals :

- Practise Q&A :
 ```Lowest Common Ancestor in a Binary Tree.````

-  REVISE trick behind Building Trees from given 2 traversals : 1 in Exam, 1 in Practise.


7. Binary Search Trees :

- Deleting a Node from BST (Pseudo Code in Slides using transplant) or else just understand code given in Practise Question.
 
- Concentrate on the MCQ's Practise too.
-  Optimise the 1st & Last Questions in EXAM


8. Self Balancing BST :

-  Insert Node in AVL Trees (Includes Double Rotation) Slides

- Balancing AVL Tree MCQ in 1st Practise (Screenshot)

- MCQ Test, Balancing AVL , 1 Question Solving

- AVL Trees & Red Black Trees are mainly for Interviews & Not coding tests. Revise all the Slides & MCQ's & Implementation of all Practise Q&A.


---------------------------------------

10. BFS-DFS :

- Coding Exam -1 -> 2nd Question
- Coding Exam - 2 -> 1st Question

----------------------------------------
11. Topological Sort :

- Coding Exam - 2nd Question
----------------------------------------

Course Assessment DSA :
Exam-1  -->  Q-1, 2, 3
Exam-2   --> Q-1, 2, 3
-------------------------------------------